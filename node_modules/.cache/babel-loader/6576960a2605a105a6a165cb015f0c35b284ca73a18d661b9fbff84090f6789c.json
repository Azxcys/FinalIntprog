{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'https://finalintproggroupf.onrender.com/api';\nexport const authService = {\n  async login(credentials) {\n    try {\n      console.log('Attempting login with:', credentials.username);\n      const response = await axios.post(`${API_URL}/login`, credentials);\n      console.log('Login response:', response.data);\n      if (response.data.token) {\n        localStorage.setItem('token', response.data.token);\n        localStorage.setItem('user', JSON.stringify(response.data.user));\n      }\n      return response.data;\n    } catch (error) {\n      console.error('Login error:', error.response || error);\n      throw error;\n    }\n  },\n  async register(data) {\n    try {\n      console.log('Attempting registration with username:', data.username);\n      const response = await axios.post(`${API_URL}/register`, {\n        ...data,\n        status: 'active' // Add default status as required by database\n      });\n      console.log('Registration response:', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Registration error:', error.response || error);\n      throw error;\n    }\n  },\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  },\n  getCurrentUser() {\n    const user = localStorage.getItem('user');\n    return user ? JSON.parse(user) : null;\n  },\n  isAuthenticated() {\n    return !!localStorage.getItem('token');\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","authService","login","credentials","console","log","username","response","post","data","token","localStorage","setItem","JSON","stringify","user","error","register","status","logout","removeItem","getCurrentUser","getItem","parse","isAuthenticated"],"sources":["C:/Users/Admin/Desktop/IPT-Final-2025/src/services/authService.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'https://finalintproggroupf.onrender.com/api';\r\n\r\nexport interface LoginCredentials {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nexport interface RegisterData {\r\n  username: string;\r\n  password: string;\r\n  role: 'admin' | 'employee';\r\n}\r\n\r\nexport const authService = {\r\n  async login(credentials: LoginCredentials) {\r\n    try {\r\n      console.log('Attempting login with:', credentials.username);\r\n      const response = await axios.post(`${API_URL}/login`, credentials);\r\n      console.log('Login response:', response.data);\r\n      \r\n      if (response.data.token) {\r\n        localStorage.setItem('token', response.data.token);\r\n        localStorage.setItem('user', JSON.stringify(response.data.user));\r\n      }\r\n      return response.data;\r\n    } catch (error: any) {\r\n      console.error('Login error:', error.response || error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async register(data: RegisterData) {\r\n    try {\r\n      console.log('Attempting registration with username:', data.username);\r\n      const response = await axios.post(`${API_URL}/register`, {\r\n        ...data,\r\n        status: 'active' // Add default status as required by database\r\n      });\r\n      console.log('Registration response:', response.data);\r\n      return response.data;\r\n    } catch (error: any) {\r\n      console.error('Registration error:', error.response || error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  logout() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  },\r\n\r\n  getCurrentUser() {\r\n    const user = localStorage.getItem('user');\r\n    return user ? JSON.parse(user) : null;\r\n  },\r\n\r\n  isAuthenticated() {\r\n    return !!localStorage.getItem('token');\r\n  }\r\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,6CAA6C;AAa9F,OAAO,MAAMC,WAAW,GAAG;EACzB,MAAMC,KAAKA,CAACC,WAA6B,EAAE;IACzC,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,WAAW,CAACG,QAAQ,CAAC;MAC3D,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,GAAGX,OAAO,QAAQ,EAAEM,WAAW,CAAC;MAClEC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEE,QAAQ,CAACE,IAAI,CAAC;MAE7C,IAAIF,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAE;QACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;QAClDC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACE,IAAI,CAACM,IAAI,CAAC,CAAC;MAClE;MACA,OAAOR,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOO,KAAU,EAAE;MACnBZ,OAAO,CAACY,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACT,QAAQ,IAAIS,KAAK,CAAC;MACtD,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMC,QAAQA,CAACR,IAAkB,EAAE;IACjC,IAAI;MACFL,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEI,IAAI,CAACH,QAAQ,CAAC;MACpE,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,GAAGX,OAAO,WAAW,EAAE;QACvD,GAAGY,IAAI;QACPS,MAAM,EAAE,QAAQ,CAAC;MACnB,CAAC,CAAC;MACFd,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEE,QAAQ,CAACE,IAAI,CAAC;MACpD,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOO,KAAU,EAAE;MACnBZ,OAAO,CAACY,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACT,QAAQ,IAAIS,KAAK,CAAC;MAC7D,MAAMA,KAAK;IACb;EACF,CAAC;EAEDG,MAAMA,CAAA,EAAG;IACPR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCT,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAEDC,cAAcA,CAAA,EAAG;IACf,MAAMN,IAAI,GAAGJ,YAAY,CAACW,OAAO,CAAC,MAAM,CAAC;IACzC,OAAOP,IAAI,GAAGF,IAAI,CAACU,KAAK,CAACR,IAAI,CAAC,GAAG,IAAI;EACvC,CAAC;EAEDS,eAAeA,CAAA,EAAG;IAChB,OAAO,CAAC,CAACb,YAAY,CAACW,OAAO,CAAC,OAAO,CAAC;EACxC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}